
package view;


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.TransferHandler;

import javax.swing.border.EmptyBorder;

import model.ListRegles;
import model.Regle;

/**
 * Classe qui représente la hierarchistion des règles où le joueur est libre de modifier la hierarchie des règles qu'il a choisit
 * pour son robot.
 * @author meya
 */
public class Hierarchisation extends javax.swing.JFrame {
    /**
     * Attribut static contenant l'instance de FenetreAppelante avec les données des autres fenêtres et les données du jeu.
     * @attribute __fenetreAppelante
     */
    private static FenetreAppelante _fenetreAppelante;

    /**
     * Panel contenant les règles choisit par le joueur avec la possibilité de les hierarchiser.
     * @attribute _jp_hierar
     */
    private JPanel _jp_hierar;

    /**
     * Constructeur de la classe Hierarchisation.
     * @param tw l'instance de la classe FenetreAppelante avec les données des autres fenêtres et les données du jeu
     */
    public Hierarchisation(FenetreAppelante tw) {
        _fenetreAppelante = tw;
        _jp_hierar = new JPanel();
        _jp_hierar.setLayout(new BoxLayout(_jp_hierar,BoxLayout.Y_AXIS));
        _jp_hierar.setBackground(new Color(50,50,50));
        initComponents();
        this.getContentPane().setBackground(Color.BLACK);
        this.setLocationRelativeTo(null);
        for(int i=1; i<=tw.getGame().getToutesSituations().size(); i++){
            cbo_nbSituation.addItem(String.valueOf(i));

        }
        scp_hierar.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        scp_hierar.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scp_hierar.setViewportView(_jp_hierar);

        this.setIconImage((new javax.swing.ImageIcon(getClass().getResource("/image/pimpMyRobotProjectIcon.jpg"))).getImage());
        this.setResizable(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        scp_hierar = new javax.swing.JScrollPane();
        jbt_suiv = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lbl_nbSituation = new javax.swing.JLabel();
        cbo_nbSituation = new javax.swing.JComboBox<>();
        cbo_nbSituation1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        scp_hierar.setMaximumSize(new java.awt.Dimension(32767, 464));

        jbt_suiv.setBackground(new java.awt.Color(0, 51, 255));
        jbt_suiv.setForeground(new java.awt.Color(255, 255, 255));
        jbt_suiv.setText("Suivant");
        jbt_suiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_suivActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("<html>\n<style>\nh1{font-style: italic;}\n</style>\n<body>\n<h1>Maintenant, hiérarchisez vos règles en les glissant à la place voulue et choisissez le nombre de situations</h1>\n</body>\n</html>");

        lbl_nbSituation.setForeground(new java.awt.Color(255, 255, 255));
        lbl_nbSituation.setText("<html>\n<body>\n<h4>Nombre de situation(s) :</h4>\n</body>\n</html>\n");

        cbo_nbSituation1.setName("cbo_nbSituation"); // NOI18N
        cbo_nbSituation1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_nbSituationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(scp_hierar, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_nbSituation, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbo_nbSituation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbt_suiv, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 958, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_nbSituation, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbo_nbSituation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149)
                        .addComponent(jbt_suiv, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(scp_hierar, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }//GEN-END:initComponents


    /**
     * Permet de passer à la fenêtre suivante de l'application, modifie les poids des règles sélectionnées par l'utilisateur,
     * en fonction de leur classement final (plus elle est haute plus sont poids sera faible)
     */
    private void jbt_suivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_suivActionPerformed
        _fenetreAppelante.getGame().getSituationsChoisies().removeAll();
        this.setVisible(false);
        Integer poids = 0;
        for(Component c: _jp_hierar.getComponents()){
            if(c instanceof JPanel){
                JPanel jp = (JPanel)c;
                JLabel jl = (JLabel)jp.getComponent(0);
                for(model.Regle r: _fenetreAppelante.getGame().getRobot().getListRegles()){
                    if(jl.getText().equals(r.getIntitule())){
                        r.setPoids(poids);
                        poids++;
                   }
                }
            }
        }
        _fenetreAppelante.getGame().choixNbSituations(Integer.parseInt((String)cbo_nbSituation.getSelectedItem()));
        _fenetreAppelante.getGame().randomSituation(_fenetreAppelante.getGame().getNbSituations());
        _fenetreAppelante.getSituation().refresh();
        _fenetreAppelante.getSituation().setVisible(true);
    }//GEN-LAST:event_jbt_suivActionPerformed

    private void cbo_nbSituationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_nbSituationActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbo_nbSituationActionPerformed

    /**
     * Affiche les règles choisies par le joueur.
     */
    public void refresh(){
        clearPanel();
        afficherRegles(_fenetreAppelante.getGame().getRobot().getListRegles());
    }

    /**
     * afficherRegles permet d'afficher chaque règle choisie par l'utilisateur, trié
     * par poids de priorité, du plus important au plus faible.
     * @param lr: liste des règles choisies par l'utilisateur à la fenêtre précèdente
     */
    public void afficherRegles(ListRegles lr){
        for(int i=0; i<lr.size(); i++){
            model.Regle regle = lr.get(i);
            JLabel lbl = new JLabel(regle.getIntitule());
            lbl.setForeground(new Color(255, 153, 0));

            MouseListener ml = new MouseListener(){
                @Override
                public void mouseClicked(MouseEvent mouseEvent) {}
                @Override
                public void mousePressed(MouseEvent mouseEvent) {
                    JComponent jc = (JComponent)mouseEvent.getSource();
                    TransferHandler th = jc.getTransferHandler();
                    th.exportAsDrag(jc, mouseEvent, TransferHandler.MOVE);
                    }
                @Override
                public void mouseReleased(MouseEvent mouseEvent) {}
                public void mouseEntered(MouseEvent mouseEvent) {
                    lbl.setCursor(new Cursor(Cursor.HAND_CURSOR));
                    lbl.setForeground(new Color(255, 226, 182));
                }
                @Override
                public void mouseExited(MouseEvent mouseEvent) {
                    lbl.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    lbl.setForeground(new Color(255, 153, 0));
                }
            };
            lbl.setTransferHandler(new TransferHandlerJLabel());
            lbl.addMouseListener(ml);


            JPanel jpForlbl = new JPanel();
            jpForlbl.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            jpForlbl.setBackground(new Color(20, 20, 20));
            jpForlbl.add(lbl);
            jpForlbl.setMaximumSize(new Dimension(535,60));
            _jp_hierar.add(jpForlbl);
            _jp_hierar.add(Box.createVerticalStrut(5));
        }
    }

    /**
     * Permet de supprimer touts les éléments (un élément étant une règle) dans le conteneur
     * accueillant les règles choisies par l'utilisateur, elle permet d'éviter de retrouver des doublons ou les règles
     * désélectionnées après un retour en arrière.
     */
    private void clearPanel(){
        _jp_hierar.removeAll();
        _jp_hierar.revalidate();
        _jp_hierar.repaint();
    }

    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(Hierarchisation.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(Hierarchisation.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(Hierarchisation.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(Hierarchisation.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new Hierarchisation(__fenetreAppelante).setVisible(true);
                }
            });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbo_nbSituation;
    private javax.swing.JComboBox<String> cbo_nbSituation1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jbt_suiv;
    private javax.swing.JLabel lbl_nbSituation;
    private javax.swing.JScrollPane scp_hierar;
    // End of variables declaration//GEN-END:variables

}
