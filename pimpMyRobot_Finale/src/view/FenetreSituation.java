
package view;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;

import java.awt.Font;

import java.net.URI;

import java.net.URISyntaxException;

import java.nio.file.Path;

import java.nio.file.Paths;

import java.util.ArrayList;

import java.util.Collections;

import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;

import javax.swing.JComponent;
import javax.swing.JLabel;

import javax.swing.JPanel;
import javax.swing.JProgressBar;

import javax.swing.JScrollPane;

import javax.swing.border.Border;
import javax.swing.border.TitledBorder;

import model.ComparatorRegles;
import model.Issue;
import model.Situation;

/**
 * Classe qui représente l'affichage de la situation en cours avec son descriptif, ses issues et son image; on retrouve aussi
 * la liste des règles choisies par le joueur.
 * @author meya
 */
public class FenetreSituation extends javax.swing.JFrame {
    /**
     * Attribut static contenant l'instance de FenetreAppelante avec les données des autres fenêtres et les données du jeu.
     * @attribute static _fenetreAppelante
     */
    private static FenetreAppelante _fenetreAppelante;

    /**
     * Attribut contenant la situation courante.
     * @attribute _s
     */
    private Situation _s;

    /**
     * Attribut contenant l'issue choisie par le robot.
     * @attribute _ir
     */
    private Issue _ir;

    /**
     * Attribut bool�an permettant de savoir si oui ou non l'un des bouttons issue � �t� cliqu�
     * @attribute _btnClicked
     */
    private boolean _btnClicked = false;

    /**
     * Attribut contenant toutes les règles du robot, triées par ordre croissant des poids.
     * @attribute _jpnRegles
     */
    private JPanel _jpnRegles;

    /**
     * Constructeur de la classe FenetreSituation.
     * @param tw l'instance de la classe FenetreAppelante avec les données des autres fenêtres et les données du jeu
     */
    public FenetreSituation(FenetreAppelante tw) {
        _fenetreAppelante = tw;
        _jpnRegles = new JPanel();
        initComponents();
        this.getContentPane().setBackground(Color.BLACK);
        Border lineborder = BorderFactory.createLineBorder(new Color(20, 20, 20), 0);
        Border borderRegle = BorderFactory.createTitledBorder(lineborder, "Vos règles triées:", TitledBorder.LEFT,TitledBorder.TOP, new Font("Arial",Font.PLAIN, 20), Color.WHITE);
        _jpnRegles.setBorder(borderRegle);
        _jpnRegles.setBackground(new Color(20, 20, 20));
        scp_regles.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        scp_regles.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        this.setLocationRelativeTo(null);

        this.setIconImage((new javax.swing.ImageIcon(getClass().getResource("/image/pimpMyRobotProjectIcon.jpg"))).getImage());
        this.setResizable(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        lbl_nom = new javax.swing.JLabel();
        prg_progress = new javax.swing.JProgressBar();
        lbl_avancee = new javax.swing.JLabel();
        btn_issue1 = new javax.swing.JButton();
        btn_issue2 = new javax.swing.JButton();
        btn_issue3 = new javax.swing.JButton();
        btn_nextSitu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_desc = new javax.swing.JTextPane();
        btn_tooltip = new javax.swing.JButton();
        jl_image = new javax.swing.JLabel();
        scp_regles = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_nom.setForeground(new java.awt.Color(255, 255, 255));
        lbl_nom.setText("jLabel3");

        lbl_avancee.setForeground(new java.awt.Color(255, 255, 255));
        lbl_avancee.setText("<html>\n<body>\n<h3>Progression:</h3>\n</body>\n</html>\n");

        btn_issue1.setBackground(new java.awt.Color(153, 153, 153));
        btn_issue1.setText("jButton1");
        btn_issue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_issue1ActionPerformed(evt);
            }
        });

        btn_issue2.setBackground(new java.awt.Color(153, 153, 153));
        btn_issue2.setText("jButton1");
        btn_issue2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_issue2ActionPerformed(evt);
            }
        });

        btn_issue3.setBackground(new java.awt.Color(153, 153, 153));
        btn_issue3.setText("jButton1");
        btn_issue3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_issue3ActionPerformed(evt);
            }
        });

        btn_nextSitu.setBackground(new java.awt.Color(0, 51, 255));
        btn_nextSitu.setForeground(new java.awt.Color(255, 255, 255));
        btn_nextSitu.setText("Suivant");
        btn_nextSitu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextSituActionPerformed(evt);
            }
        });

        txt_desc.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(txt_desc);

        btn_tooltip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/tooltip_icon.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbl_nom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_avancee, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                        .addComponent(scp_regles, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(prg_progress, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_tooltip, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_nextSitu, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_issue1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_issue2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_issue3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jl_image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(327, 327, 327)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_issue1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_issue2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_issue3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn_nextSitu, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btn_tooltip, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10))))
                        .addComponent(jl_image, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_avancee, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prg_progress, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scp_regles, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }//GEN-END:initComponents

    private void btnIssueClick(java.awt.event.ActionEvent evt,int indice) {
        if(!_btnClicked){
           _btnClicked = true;
           _fenetreAppelante.getGame().getIssuesJoueurs().add(this._s.getListIssues().get(indice));
           _fenetreAppelante.getGame().issueChoisi(this._s.getListIssues().get(indice), this._ir);
           btn_tooltip.setVisible(true);
           for(Component c: this.getContentPane().getComponents()){
                if(c instanceof JButton){
                    if(((JButton)c).getText().equals(this._ir.getNom())){
                       c.setBackground(Color.GREEN);
                    }
                    else if((JButton)c != btn_nextSitu){
                       c.setBackground(Color.RED);
                   }
               }
           }
       }
    }

    /**
     * Ajoute la première issue à la liste des issues choisies par le joueur et compare cette issue avec l'issue choisie par
     * le robot et augmente ou pas le score en conséquence.
     */
    private void btn_issue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_issue1ActionPerformed
        btnIssueClick(evt, 0);
    }//GEN-LAST:event_btn_issue1ActionPerformed

    /**
     * Lance une nouvelle situation et augmente la bare de progression en conséquence.
     */
    private void btn_nextSituActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextSituActionPerformed
        // TODO add your handling code here:
        if(_btnClicked) {
            _btnClicked = false;
            if(_fenetreAppelante.getGame().getCompteur() < _fenetreAppelante.getGame().getNbSituations()-1) {
                _fenetreAppelante.getGame().setCompteur(_fenetreAppelante.getGame().getCompteur()+1);
                prg_progress.setValue(_fenetreAppelante.getGame().getCompteur());
                btn_issue1.setBackground(new Color(153,153,153));
                btn_issue2.setBackground(new Color(153,153,153));
                btn_issue3.setBackground(new Color(153,153,153));
                refresh();
            }
            else {
                this._jpnRegles.removeAll();
                _fenetreAppelante.getGame().setCompteur(0);
                btn_issue1.setBackground(new Color(153,153,153));
                btn_issue2.setBackground(new Color(153,153,153));
                btn_issue3.setBackground(new Color(153,153,153));
                this.setVisible(false);
                _fenetreAppelante.getBilan().refresh();
                _fenetreAppelante.getBilan().setVisible(true);
            }
        }
    }//GEN-LAST:event_btn_nextSituActionPerformed

    /**
     * Ajoute la deuxième issue à la liste des issues choisies par le joueur et compare cette issue avec l'issue choisie par
     * le robot et augmente ou pas le score en conséquence.
     */
    private void btn_issue2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_issue2ActionPerformed
        btnIssueClick(evt, 1);
    }//GEN-LAST:event_btn_issue2ActionPerformed

    /**
     * Ajoute la troisième issue à la liste des issues choisies par le joueur et compare cette issue avec l'issue choisie par
     * le robot et augmente ou pas le score en conséquence.
     */
    private void btn_issue3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_issue3ActionPerformed
         btnIssueClick(evt, 2);
    }//GEN-LAST:event_btn_issue3ActionPerformed

    /**
     * Affiche le descriptif de la situation courante avec ses issues et son image et affiche également les règles choisies
     * par le joueur et d'autres informations comme la bare de progression, le nom du robot et le score actuel.
     */
    public void refresh() {
        
        this._s = _fenetreAppelante.getGame().getSituationsChoisies().get(_fenetreAppelante.getGame().getCompteur());

        jl_image.setIcon(new ImageIcon(getClass().getResource(this._s.getImage())));
        txt_desc.setText(this._s.getDescriptif());
        txt_desc.setEditable(false);
        btn_issue1.setText(this._s.getListIssues().get(0).getNom());
        btn_issue2.setText(this._s.getListIssues().get(1).getNom());
        btn_issue3.setText(this._s.getListIssues().get(2).getNom());
        lbl_nom.setText("<html><body><h3>" +
                        _fenetreAppelante.getGame().getRobot().getNom() +
                         ", ton score est de: " +
                         String.valueOf(_fenetreAppelante.getGame().getScore()) +
                        "</h3></body></html>");
        BoxLayout boxlayout = new BoxLayout(_jpnRegles, BoxLayout.Y_AXIS);
        _jpnRegles.setLayout(boxlayout);

        if(_fenetreAppelante.getGame().getCompteur() == 0) {
            Collections.sort(_fenetreAppelante.getGame().getRobot().getListRegles(), new ComparatorRegles());
            for(model.Regle r : _fenetreAppelante.getGame().getRobot().getListRegles()) {
                JLabel jlb = new JLabel();
                jlb.setText(r.getIntitule());
                jlb.setForeground(new Color(255, 153, 0));
                _jpnRegles.add(jlb);
                _jpnRegles.add(Box.createRigidArea(new Dimension(1, 5)));
            }
        }
        scp_regles.setViewportView(_jpnRegles);
        prg_progress.setMinimum(0);
        prg_progress.setMaximum(_fenetreAppelante.getGame().getNbSituations());
        prg_progress.setValue(_fenetreAppelante.getGame().getCompteur());
        prg_progress.setStringPainted(true);


        this._ir = _fenetreAppelante.getGame().nextSituation();
        _fenetreAppelante.getGame().getIssuesRobot().add(this._ir);
        model.Regle rir = null;
        for(model.Regle r : _fenetreAppelante.getGame().getRobot().getListRegles()) {
            if(r.getPoids() == this._ir.getPoids()) {
                rir = r;
            }
        }
        btn_tooltip.setToolTipText("<html><body><h3>L'issue choisie par le robot est '"
                                   + this._ir.getNom()
                                   + "'</h3></body></html>");
        btn_tooltip.setVisible(false);
    }

    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ViewSituation.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ViewSituation.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ViewSituation.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ViewSituation.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new ViewSituation(testview).setVisible(true);
                }
            });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_issue1;
    private javax.swing.JButton btn_issue2;
    private javax.swing.JButton btn_issue3;
    private javax.swing.JButton btn_nextSitu;
    private javax.swing.JButton btn_tooltip;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jl_image;
    private javax.swing.JLabel lbl_avancee;
    private javax.swing.JLabel lbl_nom;
    private javax.swing.JProgressBar prg_progress;
    private javax.swing.JScrollPane scp_regles;
    private javax.swing.JTextPane txt_desc;
    // End of variables declaration//GEN-END:variables

}
